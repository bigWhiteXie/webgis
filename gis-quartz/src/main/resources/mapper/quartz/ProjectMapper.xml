<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.quartz.mapper.ProjectMapper">

    <resultMap type="Project" id="ProjectResult">
        <result property="id" column="id"/>
        <result property="projectCode" column="project_code"/>
        <result property="projectType" column="project_type"/>
        <result property="storageTime" column="storage_time"/>
        <result property="manager" column="manager"/>
        <result property="geom" column="geom"/>
        <result property="companyCode" column="company_code"/>
        <result property="companyName" column="company_name"/>
    </resultMap>

    <sql id="selectProjectVo">
        select id, project_code, project_type, storage_time, manager, geom, company_code, company_name from project
    </sql>

    <insert id="insertProjectBatch">
        INSERT INTO project (project_code, storage_time)
        VALUES
        <foreach collection="projectCodes" item="projectCode" separator=",">
            (#{projectCode}, NOW())
        </foreach>
        ON CONFLICT (project_code) DO NOTHING
    </insert>

    <update id="updateProject">
        update project
        <set>
            <if test="projectType != null and projectType != ''">
                project_type = #{projectType},
            </if>
            <if test="manager != null and manager != ''">
                manager = #{manager},
            </if>
            <if test="geom != null and geom != ''">
                geom = ST_GeomFromText(#{geom}, 4490),
            </if>
            <if test="companyCode != null and companyCode != ''">
                company_code = #{companyCode},
            </if>
            <if test="companyName != null and companyName != ''">
                company_name = #{companyName},
            </if>
        </set>
        where project_code = #{projectCode}
    </update>

    <select id="selectProjectListByConditionPager" parameterType="Project" resultMap="ProjectResult">
        <include refid="selectProjectVo"/>
        <where>
            <if test="project.projectCode != null  and project.projectCode != ''">
                and project_code like CONCAT('%', #{project.projectCode}, '%')
            </if>
            <if test="project.projectType != null  and project.projectType != ''">
                and project_type = #{project.projectType}
            </if>
            <if test="project.manager != null  and project.manager != ''">
                and manager = #{project.manager}
            </if>
            <if test="project.companyCode != null and project.companyCode != ''">
                and company_code = #{project.companyCode}
            </if>
            <if test="project.companyName != null and project.companyName != ''">
                and company_name = #{project.companyName}
            </if>
        </where>
        order by storage_time desc
        limit #{limit} offset #{offset}
    </select>

    <select id="selectProjectCount" parameterType="Project" resultType="Integer">
        SELECT count(*) FROM project
        <where>
            <if test="project.projectCode != null  and project.projectCode != ''">
                and project_code = #{project.projectCode}
            </if>
            <if test="project.projectType != null  and project.projectType != ''">
                and project_type = #{project.projectType}
            </if>
            <if test="project.manager != null  and project.manager != ''">
                and manager = #{project.manager}
            </if>
            <if test="project.companyCode != null and project.companyCode != ''">
                and company_code = #{project.companyCode}
            </if>
            <if test="project.companyName != null and project.companyName != ''">
                and company_name = #{project.companyName}
            </if>
        </where>
    </select>

    <insert id="insertProject" parameterType="Project">
        insert into project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="projectCode != null and projectCode != ''">
                project_code,
            </if>
            <if test="projectType != null and projectType != ''">
                project_type,
            </if>
            <if test="storageTime != null">
                storage_time,
            </if>
            <if test="manager != null and manager != ''">
                manager,
            </if>
            <if test="geom != null and geom != ''">
                geom,
            </if>
            <if test="companyCode != null and companyCode != ''">
                company_code,
            </if>
            <if test="companyName != null and companyName != ''">
                company_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="projectCode != null and projectCode != ''">
                #{projectCode},
            </if>
            <if test="projectType != null and projectType != ''">
                #{projectType},
            </if>
            <if test="storageTime != null">
                #{storageTime},
            </if>
            <if test="manager != null and manager != ''">
                #{manager},
            </if>
            <if test="geom != null and geom != ''">
                #{geom},
            </if>
            <if test="companyCode != null and companyCode != ''">
                #{companyCode},
            </if>
            <if test="companyName != null and companyName != ''">
                #{companyName},
            </if>
        </trim>
    </insert>
    
    <select id="selectAllCompanyNames" resultType="String">
        SELECT DISTINCT company_name FROM project WHERE company_name IS NOT NULL AND company_name != ''
    </select>

</mapper>