<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.quartz.mapper.WaterSourceInfoMapper">
    
    <resultMap type="WaterSourceInfo" id="WaterSourceInfoResult">
        <result property="sourceId" column="source_id"/>
        <result property="projectId" column="project_id"/>
        <result property="provinceCode" column="province_code"/>
        <result property="cityCode" column="city_code"/>
        <result property="countyCode" column="county_code"/>
        <result property="sourceName" column="source_name"/>
        <result property="sourceCode" column="source_code"/>
        <result property="centerLongitude" column="center_longitude"/>
        <result property="centerLatitude" column="center_latitude"/>
        <result property="sourceLevel" column="source_level"/>
        <result property="waterSupplyScale" column="water_supply_scale"/>
        <result property="servicePopulation" column="service_population"/>
        <result property="waterQualityCategory" column="water_quality_category"/>
        <result property="waterQualityCategoryTime" column="water_quality_category_time"/>
        <result property="burialCondition" column="burial_condition"/>
        <result property="aquiferMediumType" column="aquifer_medium_type"/>
        <result property="isProtectionZoneDelineated" column="is_protection_zone_delineated"/>
        <result property="firstLevelProtectionZoneArea" column="first_level_protection_zone_area"/>
        <result property="firstLevelProtectionZonePollutionSourceCount" column="first_level_protection_zone_pollution_source_count"/>
        <result property="secondLevelProtectionZoneArea" column="second_level_protection_zone_area"/>
        <result property="secondLevelProtectionZonePollutionSourceCount" column="second_level_protection_zone_pollution_source_count"/>
        <result property="quasiProtectionZoneArea" column="quasi_protection_zone_area"/>
        <result property="quasiProtectionZonePollutionSourceCount" column="quasi_protection_zone_pollution_source_count"/>
        <result property="isRechargeAreaDelineated" column="is_recharge_area_delineated"/>
        <result property="rechargeAreaArea" column="recharge_area_area"/>
        <result property="rechargeAreaPollutionSourceCount" column="recharge_area_pollution_source_count"/>
        <result property="isGroundwaterPollutionSourceNearby" column="is_groundwater_pollution_source_nearby"/>
        <result property="groundwaterPollutionSourceCountNearby" column="groundwater_pollution_source_count_nearby"/>
        <result property="isPriorityControlled" column="is_priority_controlled"/>
        <result property="priorityControlReason" column="priority_control_reason"/>
        <result property="isExceedingStandard" column="is_exceeding_standard"/>
        <result property="exceedingStandardReason" column="exceeding_standard_reason"/>
        <result property="humanFactorExceedingStandardIndex" column="human_factor_exceeding_standard_index"/>
        <result property="humanFactorExceedingStandardReason" column="human_factor_exceeding_standard_reason"/>
        <result property="implementedControlMeasures" column="implemented_control_measures"/>
        <result property="currentWaterQualityStatus" column="current_water_quality_status"/>
        <result property="plannedControlMeasures" column="planned_control_measures"/>
        <result property="expectedStandardReachingTime" column="expected_standard_reaching_time"/>
        <result property="isWaterSupplyUpToStandard" column="is_water_supply_up_to_standard"/>
        <result property="geom" column="geom"/>
        <result property="provinceName" column="province_name"/>
        <result property="cityName" column="city_name"/>
        <result property="countyName" column="county_name"/>
    </resultMap>
    
    <resultMap type="WaterSourceInfo" id="WaterSourceInfoSimpleResult">
        <result property="sourceId" column="source_id"/>
        <result property="geom" column="geom"/>
        <result property="waterQualityCategory" column="water_quality_category"/>
    </resultMap>
    
    <sql id="selectWaterSourceInfoVo">
        SELECT 
            wsi.source_id, 
            wsi.project_id,
            wsi.province_code, 
            wsi.city_code, 
            wsi.county_code, 
            wsi.source_name, 
            wsi.source_code, 
            wsi.center_longitude, 
            wsi.center_latitude, 
            wsi.source_level, 
            wsi.water_supply_scale, 
            wsi.service_population, 
            wsi.water_quality_category, 
            wsi.water_quality_category_time, 
            wsi.burial_condition, 
            wsi.aquifer_medium_type, 
            wsi.is_protection_zone_delineated, 
            wsi.first_level_protection_zone_area, 
            wsi.first_level_protection_zone_pollution_source_count, 
            wsi.second_level_protection_zone_area, 
            wsi.second_level_protection_zone_pollution_source_count, 
            wsi.quasi_protection_zone_area, 
            wsi.quasi_protection_zone_pollution_source_count, 
            wsi.is_recharge_area_delineated, 
            wsi.recharge_area_area, 
            wsi.recharge_area_pollution_source_count, 
            wsi.is_groundwater_pollution_source_nearby, 
            wsi.groundwater_pollution_source_count_nearby, 
            wsi.is_priority_controlled, 
            wsi.priority_control_reason, 
            wsi.is_exceeding_standard, 
            wsi.exceeding_standard_reason, 
            wsi.human_factor_exceeding_standard_index, 
            wsi.human_factor_exceeding_standard_reason, 
            wsi.implemented_control_measures, 
            wsi.current_water_quality_status, 
            wsi.planned_control_measures, 
            wsi.expected_standard_reaching_time, 
            wsi.is_water_supply_up_to_standard,
            ST_AsText(wsi.geom) as geom,
            l.province_name,
            l.city_name,
            l.county_name
        FROM groundwater_source_info wsi
        LEFT JOIN location l ON wsi.province_code = l.province_code 
                             AND wsi.city_code = l.city_code 
                             AND wsi.county_code = l.county_code
    </sql>
    
    <select id="selectWaterSourceInfoListByConditionPager" parameterType="WaterSourceInfo" resultMap="WaterSourceInfoResult">
        <include refid="selectWaterSourceInfoVo"/>
        <where>
            <if test="waterSourceInfo.sourceName != null and waterSourceInfo.sourceName != ''">
                AND wsi.source_name LIKE CONCAT('%', #{waterSourceInfo.sourceName}, '%')
            </if>
            <if test="waterSourceInfo.sourceLevel != null and waterSourceInfo.sourceLevel != ''">
                AND wsi.source_level = #{waterSourceInfo.sourceLevel}
            </if>
            <if test="waterSourceInfo.waterQualityCategory != null">
                AND wsi.water_quality_category = #{waterSourceInfo.waterQualityCategory}
            </if>
            <if test="waterSourceInfo.isExceedingStandard != null">
                AND wsi.is_exceeding_standard = #{waterSourceInfo.isExceedingStandard}
            </if>
        </where>
        ORDER BY wsi.source_id DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>
    
    <select id="selectWaterSourceInfoCount" parameterType="WaterSourceInfo" resultType="int">
        SELECT COUNT(*) FROM groundwater_source_info wsi
        <where>
            <if test="waterSourceInfo.sourceName != null and waterSourceInfo.sourceName != ''">
                AND wsi.source_name LIKE CONCAT('%', #{waterSourceInfo.sourceName}, '%')
            </if>
            <if test="waterSourceInfo.sourceLevel != null and waterSourceInfo.sourceLevel != ''">
                AND wsi.source_level = #{waterSourceInfo.sourceLevel}
            </if>
            <if test="waterSourceInfo.waterQualityCategory != null">
                AND wsi.water_quality_category = #{waterSourceInfo.waterQualityCategory}
            </if>
            <if test="waterSourceInfo.isExceedingStandard != null">
                AND wsi.is_exceeding_standard = #{waterSourceInfo.isExceedingStandard}
            </if>
        </where>
    </select>
    
    <insert id="insertWaterSourceInfo" parameterType="WaterSourceInfo">
        INSERT INTO groundwater_source_info(
            project_id,
            province_code,
            city_code,
            county_code,
            source_name,
            source_code,
            center_longitude,
            center_latitude,
            source_level,
            water_supply_scale,
            service_population,
            water_quality_category,
            water_quality_category_time,
            burial_condition,
            aquifer_medium_type,
            is_protection_zone_delineated,
            first_level_protection_zone_area,
            first_level_protection_zone_pollution_source_count,
            second_level_protection_zone_area,
            second_level_protection_zone_pollution_source_count,
            quasi_protection_zone_area,
            quasi_protection_zone_pollution_source_count,
            is_recharge_area_delineated,
            recharge_area_area,
            recharge_area_pollution_source_count,
            is_groundwater_pollution_source_nearby,
            groundwater_pollution_source_count_nearby,
            is_priority_controlled,
            priority_control_reason,
            is_exceeding_standard,
            exceeding_standard_reason,
            human_factor_exceeding_standard_index,
            human_factor_exceeding_standard_reason,
            implemented_control_measures,
            current_water_quality_status,
            planned_control_measures,
            expected_standard_reaching_time,
            is_water_supply_up_to_standard,
            geom
        ) VALUES (
            #{projectId},
            #{provinceCode},
            #{cityCode},
            #{countyCode},
            #{sourceName},
            #{sourceCode},
            #{centerLongitude},
            #{centerLatitude},
            #{sourceLevel},
            #{waterSupplyScale},
            #{servicePopulation},
            #{waterQualityCategory},
            #{waterQualityCategoryTime},
            #{burialCondition},
            #{aquiferMediumType},
            #{isProtectionZoneDelineated},
            #{firstLevelProtectionZoneArea},
            #{firstLevelProtectionZonePollutionSourceCount},
            #{secondLevelProtectionZoneArea},
            #{secondLevelProtectionZonePollutionSourceCount},
            #{quasiProtectionZoneArea},
            #{quasiProtectionZonePollutionSourceCount},
            #{isRechargeAreaDelineated},
            #{rechargeAreaArea},
            #{rechargeAreaPollutionSourceCount},
            #{isGroundwaterPollutionSourceNearby},
            #{groundwaterPollutionSourceCountNearby},
            #{isPriorityControlled},
            #{priorityControlReason},
            #{isExceedingStandard},
            #{exceedingStandardReason},
            #{humanFactorExceedingStandardIndex},
            #{humanFactorExceedingStandardReason},
            #{implementedControlMeasures},
            #{currentWaterQualityStatus},
            #{plannedControlMeasures},
            #{expectedStandardReachingTime},
            #{isWaterSupplyUpToStandard},
            ST_GeomFromText(#{geom}, 4490)
        )
    </insert>
    
    <insert id="insertWaterSourceInfoBatch">
        INSERT INTO groundwater_source_info (source_code, create_time) 
        VALUES 
        <foreach collection="sourceCodes" item="sourceCode" separator=","> 
            (#{sourceCode}, NOW()) 
        </foreach> 
        ON CONFLICT (source_code) DO UPDATE SET
        project_id = EXCLUDED.project_id,
        province_code = EXCLUDED.province_code,
        city_code = EXCLUDED.city_code,
        county_code = EXCLUDED.county_code,
        source_name = EXCLUDED.source_name,
        center_longitude = EXCLUDED.center_longitude,
        center_latitude = EXCLUDED.center_latitude,
        source_level = EXCLUDED.source_level,
        water_supply_scale = EXCLUDED.water_supply_scale,
        service_population = EXCLUDED.service_population,
        water_quality_category = EXCLUDED.water_quality_category,
        water_quality_category_time = EXCLUDED.water_quality_category_time,
        burial_condition = EXCLUDED.burial_condition,
        aquifer_medium_type = EXCLUDED.aquifer_medium_type,
        is_protection_zone_delineated = EXCLUDED.is_protection_zone_delineated,
        first_level_protection_zone_area = EXCLUDED.first_level_protection_zone_area,
        first_level_protection_zone_pollution_source_count = EXCLUDED.first_level_protection_zone_pollution_source_count,
        second_level_protection_zone_area = EXCLUDED.second_level_protection_zone_area,
        second_level_protection_zone_pollution_source_count = EXCLUDED.second_level_protection_zone_pollution_source_count,
        quasi_protection_zone_area = EXCLUDED.quasi_protection_zone_area,
        quasi_protection_zone_pollution_source_count = EXCLUDED.quasi_protection_zone_pollution_source_count,
        is_recharge_area_delineated = EXCLUDED.is_recharge_area_delineated,
        recharge_area_area = EXCLUDED.recharge_area_area,
        recharge_area_pollution_source_count = EXCLUDED.recharge_area_pollution_source_count,
        is_groundwater_pollution_source_nearby = EXCLUDED.is_groundwater_pollution_source_nearby,
        groundwater_pollution_source_count_nearby = EXCLUDED.groundwater_pollution_source_count_nearby,
        is_priority_controlled = EXCLUDED.is_priority_controlled,
        priority_control_reason = EXCLUDED.priority_control_reason,
        is_exceeding_standard = EXCLUDED.is_exceeding_standard,
        exceeding_standard_reason = EXCLUDED.exceeding_standard_reason,
        human_factor_exceeding_standard_index = EXCLUDED.human_factor_exceeding_standard_index,
        human_factor_exceeding_standard_reason = EXCLUDED.human_factor_exceeding_standard_reason,
        implemented_control_measures = EXCLUDED.implemented_control_measures,
        current_water_quality_status = EXCLUDED.current_water_quality_status,
        planned_control_measures = EXCLUDED.planned_control_measures,
        expected_standard_reaching_time = EXCLUDED.expected_standard_reaching_time,
        is_water_supply_up_to_standard = EXCLUDED.is_water_supply_up_to_standard,
        geom = EXCLUDED.geom
    </insert>
    
    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO groundwater_source_info (
        project_id,
        province_code,
        city_code,
        county_code,
        source_name,
        source_code,
        center_longitude,
        center_latitude,
        source_level,
        water_supply_scale,
        service_population,
        water_quality_category,
        water_quality_category_time,
        burial_condition,
        aquifer_medium_type,
        is_protection_zone_delineated,
        first_level_protection_zone_area,
        first_level_protection_zone_pollution_source_count,
        second_level_protection_zone_area,
        second_level_protection_zone_pollution_source_count,
        quasi_protection_zone_area,
        quasi_protection_zone_pollution_source_count,
        is_recharge_area_delineated,
        recharge_area_area,
        recharge_area_pollution_source_count,
        is_groundwater_pollution_source_nearby,
        groundwater_pollution_source_count_nearby,
        is_priority_controlled,
        priority_control_reason,
        is_exceeding_standard,
        exceeding_standard_reason,
        human_factor_exceeding_standard_index,
        human_factor_exceeding_standard_reason,
        implemented_control_measures,
        current_water_quality_status,
        planned_control_measures,
        expected_standard_reaching_time,
        is_water_supply_up_to_standard,
        geom
        ) VALUES
        <foreach collection="waterSourceInfos" item="item" separator=",">
            (
            #{item.projectId},
            #{item.provinceCode},
            #{item.cityCode},
            #{item.countyCode},
            #{item.sourceName},
            #{item.sourceCode},
            #{item.centerLongitude},
            #{item.centerLatitude},
            #{item.sourceLevel},
            #{item.waterSupplyScale},
            #{item.servicePopulation},
            #{item.waterQualityCategory},
            #{item.waterQualityCategoryTime},
            #{item.burialCondition},
            #{item.aquiferMediumType},
            #{item.isProtectionZoneDelineated},
            #{item.firstLevelProtectionZoneArea},
            #{item.firstLevelProtectionZonePollutionSourceCount},
            #{item.secondLevelProtectionZoneArea},
            #{item.secondLevelProtectionZonePollutionSourceCount},
            #{item.quasiProtectionZoneArea},
            #{item.quasiProtectionZonePollutionSourceCount},
            #{item.isRechargeAreaDelineated},
            #{item.rechargeAreaArea},
            #{item.rechargeAreaPollutionSourceCount},
            #{item.isGroundwaterPollutionSourceNearby},
            #{item.groundwaterPollutionSourceCountNearby},
            #{item.isPriorityControlled},
            #{item.priorityControlReason},
            #{item.isExceedingStandard},
            #{item.exceedingStandardReason},
            #{item.humanFactorExceedingStandardIndex},
            #{item.humanFactorExceedingStandardReason},
            #{item.implementedControlMeasures},
            #{item.currentWaterQualityStatus},
            #{item.plannedControlMeasures},
            #{item.expectedStandardReachingTime},
            #{item.isWaterSupplyUpToStandard},
            ST_GeomFromText(#{item.geom}, 4490)
            )
        </foreach>
        ON CONFLICT (source_code) DO UPDATE SET
        project_id = EXCLUDED.project_id,
        province_code = EXCLUDED.province_code,
        city_code = EXCLUDED.city_code,
        county_code = EXCLUDED.county_code,
        source_name = EXCLUDED.source_name,
        center_longitude = EXCLUDED.center_longitude,
        center_latitude = EXCLUDED.center_latitude,
        source_level = EXCLUDED.source_level,
        water_supply_scale = EXCLUDED.water_supply_scale,
        service_population = EXCLUDED.service_population,
        water_quality_category = EXCLUDED.water_quality_category,
        water_quality_category_time = EXCLUDED.water_quality_category_time,
        burial_condition = EXCLUDED.burial_condition,
        aquifer_medium_type = EXCLUDED.aquifer_medium_type,
        is_protection_zone_delineated = EXCLUDED.is_protection_zone_delineated,
        first_level_protection_zone_area = EXCLUDED.first_level_protection_zone_area,
        first_level_protection_zone_pollution_source_count = EXCLUDED.first_level_protection_zone_pollution_source_count,
        second_level_protection_zone_area = EXCLUDED.second_level_protection_zone_area,
        second_level_protection_zone_pollution_source_count = EXCLUDED.second_level_protection_zone_pollution_source_count,
        quasi_protection_zone_area = EXCLUDED.quasi_protection_zone_area,
        quasi_protection_zone_pollution_source_count = EXCLUDED.quasi_protection_zone_pollution_source_count,
        is_recharge_area_delineated = EXCLUDED.is_recharge_area_delineated,
        recharge_area_area = EXCLUDED.recharge_area_area,
        recharge_area_pollution_source_count = EXCLUDED.recharge_area_pollution_source_count,
        is_groundwater_pollution_source_nearby = EXCLUDED.is_groundwater_pollution_source_nearby,
        groundwater_pollution_source_count_nearby = EXCLUDED.groundwater_pollution_source_count_nearby,
        is_priority_controlled = EXCLUDED.is_priority_controlled,
        priority_control_reason = EXCLUDED.priority_control_reason,
        is_exceeding_standard = EXCLUDED.is_exceeding_standard,
        exceeding_standard_reason = EXCLUDED.exceeding_standard_reason,
        human_factor_exceeding_standard_index = EXCLUDED.human_factor_exceeding_standard_index,
        human_factor_exceeding_standard_reason = EXCLUDED.human_factor_exceeding_standard_reason,
        implemented_control_measures = EXCLUDED.implemented_control_measures,
        current_water_quality_status = EXCLUDED.current_water_quality_status,
        planned_control_measures = EXCLUDED.planned_control_measures,
        expected_standard_reaching_time = EXCLUDED.expected_standard_reaching_time,
        is_water_supply_up_to_standard = EXCLUDED.is_water_supply_up_to_standard,
        geom = EXCLUDED.geom
    </insert>

    <update id="updateWaterSourceInfo" parameterType="WaterSourceInfo">
        UPDATE groundwater_source_info
        <set>
            <if test="projectId != null and projectId != ''">
                project_id = #{projectId},
            </if>
            <if test="provinceCode != null and provinceCode != ''">
                province_code = #{provinceCode},
            </if>
            <if test="cityCode != null and cityCode != ''">
                city_code = #{cityCode},
            </if>
            <if test="countyCode != null and countyCode != ''">
                county_code = #{countyCode},
            </if>
            <if test="sourceName != null and sourceName != ''">
                source_name = #{sourceName},
            </if>
            <if test="sourceLevel != null and sourceLevel != ''">
                source_level = #{sourceLevel},
            </if>
            <if test="waterSupplyScale != null">
                water_supply_scale = #{waterSupplyScale},
            </if>
            <if test="servicePopulation != null">
                service_population = #{servicePopulation},
            </if>
            <if test="waterQualityCategory != null">
                water_quality_category = #{waterQualityCategory},
            </if>
            <if test="waterQualityCategoryTime != null">
                water_quality_category_time = #{waterQualityCategoryTime},
            </if>
            <if test="burialCondition != null and burialCondition != ''">
                burial_condition = #{burialCondition},
            </if>
            <if test="aquiferMediumType != null and aquiferMediumType != ''">
                aquifer_medium_type = #{aquiferMediumType},
            </if>
            <if test="isProtectionZoneDelineated != null">
                is_protection_zone_delineated = #{isProtectionZoneDelineated},
            </if>
            <if test="firstLevelProtectionZoneArea != null">
                first_level_protection_zone_area = #{firstLevelProtectionZoneArea},
            </if>
            <if test="firstLevelProtectionZonePollutionSourceCount != null">
                first_level_protection_zone_pollution_source_count = #{firstLevelProtectionZonePollutionSourceCount},
            </if>
            <if test="secondLevelProtectionZoneArea != null">
                second_level_protection_zone_area = #{secondLevelProtectionZoneArea},
            </if>
            <if test="secondLevelProtectionZonePollutionSourceCount != null">
                second_level_protection_zone_pollution_source_count = #{secondLevelProtectionZonePollutionSourceCount},
            </if>
            <if test="quasiProtectionZoneArea != null">
                quasi_protection_zone_area = #{quasiProtectionZoneArea},
            </if>
            <if test="quasiProtectionZonePollutionSourceCount != null">
                quasi_protection_zone_pollution_source_count = #{quasiProtectionZonePollutionSourceCount},
            </if>
            <if test="isRechargeAreaDelineated != null">
                is_recharge_area_delineated = #{isRechargeAreaDelineated},
            </if>
            <if test="rechargeAreaArea != null">
                recharge_area_area = #{rechargeAreaArea},
            </if>
            <if test="rechargeAreaPollutionSourceCount != null">
                recharge_area_pollution_source_count = #{rechargeAreaPollutionSourceCount},
            </if>
            <if test="isGroundwaterPollutionSourceNearby != null">
                is_groundwater_pollution_source_nearby = #{isGroundwaterPollutionSourceNearby},
            </if>
            <if test="groundwaterPollutionSourceCountNearby != null">
                groundwater_pollution_source_count_nearby = #{groundwaterPollutionSourceCountNearby},
            </if>
            <if test="isPriorityControlled != null">
                is_priority_controlled = #{isPriorityControlled},
            </if>
            <if test="priorityControlReason != null and priorityControlReason != ''">
                priority_control_reason = #{priorityControlReason},
            </if>
            <if test="isExceedingStandard != null">
                is_exceeding_standard = #{isExceedingStandard},
            </if>
            <if test="exceedingStandardReason != null and exceedingStandardReason != ''">
                exceeding_standard_reason = #{exceedingStandardReason},
            </if>
            <if test="humanFactorExceedingStandardIndex != null and humanFactorExceedingStandardIndex != ''">
                human_factor_exceeding_standard_index = #{humanFactorExceedingStandardIndex},
            </if>
            <if test="humanFactorExceedingStandardReason != null and humanFactorExceedingStandardReason != ''">
                human_factor_exceeding_standard_reason = #{humanFactorExceedingStandardReason},
            </if>
            <if test="implementedControlMeasures != null and implementedControlMeasures != ''">
                implemented_control_measures = #{implementedControlMeasures},
            </if>
            <if test="currentWaterQualityStatus != null and currentWaterQualityStatus != ''">
                current_water_quality_status = #{currentWaterQualityStatus},
            </if>
            <if test="plannedControlMeasures != null and plannedControlMeasures != ''">
                planned_control_measures = #{plannedControlMeasures},
            </if>
            <if test="expectedStandardReachingTime != null">
                expected_standard_reaching_time = #{expectedStandardReachingTime},
            </if>
            <if test="isWaterSupplyUpToStandard != null">
                is_water_supply_up_to_standard = #{isWaterSupplyUpToStandard},
            </if>
            <if test="geom != null and geom != ''">
                geom = ST_GeomFromText(#{geom}, 4490),
            </if>
        </set>
        WHERE source_code = #{sourceCode}
    </update>

    <select id="selectAllSourceNames" resultType="string">
        SELECT DISTINCT source_name FROM groundwater_source_info WHERE source_name IS NOT NULL
    </select>

    <select id="selectWaterSourceInfoSimpleListBySpatialBounds" resultMap="WaterSourceInfoSimpleResult">
        SELECT wsi.source_id, ST_AsText(wsi.geom) as geom, wsi.water_quality_category
        FROM groundwater_source_info wsi
        <where>
            <if test="minX != null and minY != null and maxX != null and maxY != null">
                AND ST_Intersects(wsi.geom, ST_MakeEnvelope(#{minX}, #{minY}, #{maxX}, #{maxY}, 4490))
            </if>
        </where>
    </select>

    <select id="selectWaterSourceInfoById" parameterType="java.lang.Long" resultMap="WaterSourceInfoResult">
        <include refid="selectWaterSourceInfoVo"/>
        WHERE wsi.source_id = #{sourceId}
    </select>

</mapper>